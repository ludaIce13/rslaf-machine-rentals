{"ast":null,"code":"import axios from 'axios';\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\n\n// Create API instance\nconst apiInstance = axios.create({\n  baseURL: API_BASE,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add JWT token to requests if available\napiInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Authentication\nexport const register = userData => apiInstance.post('/auth/register', userData);\nexport const login = credentials => {\n  // Use URLSearchParams for application/x-www-form-urlencoded\n  const params = new URLSearchParams();\n  params.append('username', credentials.email || credentials.username);\n  params.append('password', credentials.password);\n  return axios.post(`${API_BASE}/auth/login`, params.toString(), {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  });\n};\nexport const getCurrentUser = () => apiInstance.get('/auth/me');\nexport const updateProfile = userData => apiInstance.put('/auth/me', userData);\n\n// Admin functions\nexport const getAllUsers = () => apiInstance.get('/auth/admin/users');\nexport const createAdminUser = userData => apiInstance.post('/auth/admin/users', userData);\nexport const updateUserRole = (userId, role) => apiInstance.put(`/auth/admin/users/${userId}/role`, {\n  role\n});\nexport const deactivateUser = userId => apiInstance.delete(`/auth/admin/users/${userId}`);\n\n// Products\nexport const getProducts = () => apiInstance.get('/products');\nexport const createProduct = data => apiInstance.post('/products', data);\nexport const updateProduct = (id, data) => apiInstance.put(`/products/${id}`, data);\nexport const deleteProduct = id => apiInstance.delete(`/products/${id}`);\n\n// Inventory\nexport const getInventory = () => apiInstance.get('/inventory');\nexport const createInventoryItem = data => apiInstance.post('/inventory', data);\nexport const updateInventoryItem = (id, data) => apiInstance.put(`/inventory/${id}`, data);\nexport const deleteInventoryItem = id => apiInstance.delete(`/inventory/${id}`);\n\n// Customers\nexport const getCustomers = () => apiInstance.get('/customers');\nexport const getMyCustomerProfile = () => apiInstance.get('/customers/me');\nexport const updateMyCustomerProfile = data => apiInstance.put('/customers/me', data);\nexport const createCustomer = data => apiInstance.post('/customers', data);\n\n// Orders\nexport const getOrders = () => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    return Promise.reject(new Error('No authentication token found. Please log in.'));\n  }\n  return apiInstance.get('/orders', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\nexport const getMyOrders = () => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    return Promise.reject(new Error('No authentication token found. Please log in.'));\n  }\n  return apiInstance.get('/orders/my', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\nexport const createOrder = data => apiInstance.post('/orders', data);\nexport const updateOrderStatus = (orderId, status) => apiInstance.post(`/orders/${orderId}/status/${status}`);\nexport const getOrder = orderId => apiInstance.get(`/orders/${orderId}`);\n\n// Payments\nexport const createPayment = data => apiInstance.post('/payments', data);\nexport const getPayments = () => apiInstance.get('/payments');\n\n// Availability\nexport const getAvailableItems = (productId, start, end) => apiInstance.get(`/availability/products/${productId}?start=${start}&end=${end}`);\nexport const getQuote = data => apiInstance.post('/availability/quote', data);\n\n// Reports\nexport const getUpcomingReservations = (start, end) => apiInstance.get(`/reports/upcoming-reservations?start=${start}&end=${end}`);\nexport const getUtilization = (start, end) => apiInstance.get(`/reports/utilization?start=${start}&end=${end}`);\n\n// Export as named export for component imports\nexport const api = {\n  getProducts,\n  createProduct,\n  updateProduct,\n  deleteProduct,\n  getInventory,\n  createInventoryItem,\n  updateInventoryItem,\n  deleteInventoryItem,\n  getCustomers,\n  getMyCustomerProfile,\n  updateMyCustomerProfile,\n  createCustomer,\n  getOrders,\n  getMyOrders,\n  createOrder,\n  updateOrderStatus,\n  getOrder,\n  createPayment,\n  getPayments,\n  getAvailableItems,\n  getQuote,\n  getUpcomingReservations,\n  getUtilization,\n  login,\n  register,\n  getCurrentUser,\n  updateProfile,\n  getAllUsers,\n  createAdminUser,\n  updateUserRole,\n  deactivateUser\n};\nexport default apiInstance;","map":{"version":3,"names":["axios","API_BASE","process","env","REACT_APP_API_BASE","apiInstance","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","register","userData","post","login","credentials","params","URLSearchParams","append","email","username","password","toString","getCurrentUser","get","updateProfile","put","getAllUsers","createAdminUser","updateUserRole","userId","role","deactivateUser","delete","getProducts","createProduct","data","updateProduct","id","deleteProduct","getInventory","createInventoryItem","updateInventoryItem","deleteInventoryItem","getCustomers","getMyCustomerProfile","updateMyCustomerProfile","createCustomer","getOrders","Promise","reject","Error","getMyOrders","createOrder","updateOrderStatus","orderId","status","getOrder","createPayment","getPayments","getAvailableItems","productId","start","end","getQuote","getUpcomingReservations","getUtilization","api"],"sources":["C:/Users/vidai/OneDrive/Desktop/smartrentals_mvp/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\n\n// Create API instance\nconst apiInstance = axios.create({\n  baseURL: API_BASE,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add JWT token to requests if available\napiInstance.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Authentication\nexport const register = (userData) => apiInstance.post('/auth/register', userData);\nexport const login = (credentials) => {\n  // Use URLSearchParams for application/x-www-form-urlencoded\n  const params = new URLSearchParams();\n  params.append('username', credentials.email || credentials.username);\n  params.append('password', credentials.password);\n\n  return axios.post(`${API_BASE}/auth/login`, params.toString(), {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  });\n};\nexport const getCurrentUser = () => apiInstance.get('/auth/me');\nexport const updateProfile = (userData) => apiInstance.put('/auth/me', userData);\n\n// Admin functions\nexport const getAllUsers = () => apiInstance.get('/auth/admin/users');\nexport const createAdminUser = (userData) => apiInstance.post('/auth/admin/users', userData);\nexport const updateUserRole = (userId, role) => apiInstance.put(`/auth/admin/users/${userId}/role`, { role });\nexport const deactivateUser = (userId) => apiInstance.delete(`/auth/admin/users/${userId}`);\n\n// Products\nexport const getProducts = () => apiInstance.get('/products');\nexport const createProduct = (data) => apiInstance.post('/products', data);\nexport const updateProduct = (id, data) => apiInstance.put(`/products/${id}`, data);\nexport const deleteProduct = (id) => apiInstance.delete(`/products/${id}`);\n\n// Inventory\nexport const getInventory = () => apiInstance.get('/inventory');\nexport const createInventoryItem = (data) => apiInstance.post('/inventory', data);\nexport const updateInventoryItem = (id, data) => apiInstance.put(`/inventory/${id}`, data);\nexport const deleteInventoryItem = (id) => apiInstance.delete(`/inventory/${id}`);\n\n// Customers\nexport const getCustomers = () => apiInstance.get('/customers');\nexport const getMyCustomerProfile = () => apiInstance.get('/customers/me');\nexport const updateMyCustomerProfile = (data) => apiInstance.put('/customers/me', data);\nexport const createCustomer = (data) => apiInstance.post('/customers', data);\n\n// Orders\nexport const getOrders = () => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    return Promise.reject(new Error('No authentication token found. Please log in.'));\n  }\n  return apiInstance.get('/orders', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\nexport const getMyOrders = () => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    return Promise.reject(new Error('No authentication token found. Please log in.'));\n  }\n  return apiInstance.get('/orders/my', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\nexport const createOrder = (data) => apiInstance.post('/orders', data);\nexport const updateOrderStatus = (orderId, status) => apiInstance.post(`/orders/${orderId}/status/${status}`);\nexport const getOrder = (orderId) => apiInstance.get(`/orders/${orderId}`);\n\n// Payments\nexport const createPayment = (data) => apiInstance.post('/payments', data);\nexport const getPayments = () => apiInstance.get('/payments');\n\n// Availability\nexport const getAvailableItems = (productId, start, end) =>\n  apiInstance.get(`/availability/products/${productId}?start=${start}&end=${end}`);\nexport const getQuote = (data) => apiInstance.post('/availability/quote', data);\n\n// Reports\nexport const getUpcomingReservations = (start, end) =>\n  apiInstance.get(`/reports/upcoming-reservations?start=${start}&end=${end}`);\nexport const getUtilization = (start, end) =>\n  apiInstance.get(`/reports/utilization?start=${start}&end=${end}`);\n\n// Export as named export for component imports\nexport const api = {\n  getProducts,\n  createProduct,\n  updateProduct,\n  deleteProduct,\n  getInventory,\n  createInventoryItem,\n  updateInventoryItem,\n  deleteInventoryItem,\n  getCustomers,\n  getMyCustomerProfile,\n  updateMyCustomerProfile,\n  createCustomer,\n  getOrders,\n  getMyOrders,\n  createOrder,\n  updateOrderStatus,\n  getOrder,\n  createPayment,\n  getPayments,\n  getAvailableItems,\n  getQuote,\n  getUpcomingReservations,\n  getUtilization,\n  login,\n  register,\n  getCurrentUser,\n  updateProfile,\n  getAllUsers,\n  createAdminUser,\n  updateUserRole,\n  deactivateUser\n};\n\nexport default apiInstance;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;;AAE1E;AACA,MAAMC,WAAW,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC/BC,OAAO,EAAEN,QAAQ;EACjBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,WAAW,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC/C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,QAAQ,GAAIC,QAAQ,IAAKb,WAAW,CAACc,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;AAClF,OAAO,MAAME,KAAK,GAAIC,WAAW,IAAK;EACpC;EACA,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;EACpCD,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEH,WAAW,CAACI,KAAK,IAAIJ,WAAW,CAACK,QAAQ,CAAC;EACpEJ,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEH,WAAW,CAACM,QAAQ,CAAC;EAE/C,OAAO3B,KAAK,CAACmB,IAAI,CAAC,GAAGlB,QAAQ,aAAa,EAAEqB,MAAM,CAACM,QAAQ,CAAC,CAAC,EAAE;IAC7DpB,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMqB,cAAc,GAAGA,CAAA,KAAMxB,WAAW,CAACyB,GAAG,CAAC,UAAU,CAAC;AAC/D,OAAO,MAAMC,aAAa,GAAIb,QAAQ,IAAKb,WAAW,CAAC2B,GAAG,CAAC,UAAU,EAAEd,QAAQ,CAAC;;AAEhF;AACA,OAAO,MAAMe,WAAW,GAAGA,CAAA,KAAM5B,WAAW,CAACyB,GAAG,CAAC,mBAAmB,CAAC;AACrE,OAAO,MAAMI,eAAe,GAAIhB,QAAQ,IAAKb,WAAW,CAACc,IAAI,CAAC,mBAAmB,EAAED,QAAQ,CAAC;AAC5F,OAAO,MAAMiB,cAAc,GAAGA,CAACC,MAAM,EAAEC,IAAI,KAAKhC,WAAW,CAAC2B,GAAG,CAAC,qBAAqBI,MAAM,OAAO,EAAE;EAAEC;AAAK,CAAC,CAAC;AAC7G,OAAO,MAAMC,cAAc,GAAIF,MAAM,IAAK/B,WAAW,CAACkC,MAAM,CAAC,qBAAqBH,MAAM,EAAE,CAAC;;AAE3F;AACA,OAAO,MAAMI,WAAW,GAAGA,CAAA,KAAMnC,WAAW,CAACyB,GAAG,CAAC,WAAW,CAAC;AAC7D,OAAO,MAAMW,aAAa,GAAIC,IAAI,IAAKrC,WAAW,CAACc,IAAI,CAAC,WAAW,EAAEuB,IAAI,CAAC;AAC1E,OAAO,MAAMC,aAAa,GAAGA,CAACC,EAAE,EAAEF,IAAI,KAAKrC,WAAW,CAAC2B,GAAG,CAAC,aAAaY,EAAE,EAAE,EAAEF,IAAI,CAAC;AACnF,OAAO,MAAMG,aAAa,GAAID,EAAE,IAAKvC,WAAW,CAACkC,MAAM,CAAC,aAAaK,EAAE,EAAE,CAAC;;AAE1E;AACA,OAAO,MAAME,YAAY,GAAGA,CAAA,KAAMzC,WAAW,CAACyB,GAAG,CAAC,YAAY,CAAC;AAC/D,OAAO,MAAMiB,mBAAmB,GAAIL,IAAI,IAAKrC,WAAW,CAACc,IAAI,CAAC,YAAY,EAAEuB,IAAI,CAAC;AACjF,OAAO,MAAMM,mBAAmB,GAAGA,CAACJ,EAAE,EAAEF,IAAI,KAAKrC,WAAW,CAAC2B,GAAG,CAAC,cAAcY,EAAE,EAAE,EAAEF,IAAI,CAAC;AAC1F,OAAO,MAAMO,mBAAmB,GAAIL,EAAE,IAAKvC,WAAW,CAACkC,MAAM,CAAC,cAAcK,EAAE,EAAE,CAAC;;AAEjF;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAA,KAAM7C,WAAW,CAACyB,GAAG,CAAC,YAAY,CAAC;AAC/D,OAAO,MAAMqB,oBAAoB,GAAGA,CAAA,KAAM9C,WAAW,CAACyB,GAAG,CAAC,eAAe,CAAC;AAC1E,OAAO,MAAMsB,uBAAuB,GAAIV,IAAI,IAAKrC,WAAW,CAAC2B,GAAG,CAAC,eAAe,EAAEU,IAAI,CAAC;AACvF,OAAO,MAAMW,cAAc,GAAIX,IAAI,IAAKrC,WAAW,CAACc,IAAI,CAAC,YAAY,EAAEuB,IAAI,CAAC;;AAE5E;AACA,OAAO,MAAMY,SAAS,GAAGA,CAAA,KAAM;EAC7B,MAAMzC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACV,OAAO0C,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,+CAA+C,CAAC,CAAC;EACnF;EACA,OAAOpD,WAAW,CAACyB,GAAG,CAAC,SAAS,EAAE;IAChCtB,OAAO,EAAE;MACP,eAAe,EAAE,UAAUK,KAAK;IAClC;EACF,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAM6C,WAAW,GAAGA,CAAA,KAAM;EAC/B,MAAM7C,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACV,OAAO0C,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,+CAA+C,CAAC,CAAC;EACnF;EACA,OAAOpD,WAAW,CAACyB,GAAG,CAAC,YAAY,EAAE;IACnCtB,OAAO,EAAE;MACP,eAAe,EAAE,UAAUK,KAAK;IAClC;EACF,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAM8C,WAAW,GAAIjB,IAAI,IAAKrC,WAAW,CAACc,IAAI,CAAC,SAAS,EAAEuB,IAAI,CAAC;AACtE,OAAO,MAAMkB,iBAAiB,GAAGA,CAACC,OAAO,EAAEC,MAAM,KAAKzD,WAAW,CAACc,IAAI,CAAC,WAAW0C,OAAO,WAAWC,MAAM,EAAE,CAAC;AAC7G,OAAO,MAAMC,QAAQ,GAAIF,OAAO,IAAKxD,WAAW,CAACyB,GAAG,CAAC,WAAW+B,OAAO,EAAE,CAAC;;AAE1E;AACA,OAAO,MAAMG,aAAa,GAAItB,IAAI,IAAKrC,WAAW,CAACc,IAAI,CAAC,WAAW,EAAEuB,IAAI,CAAC;AAC1E,OAAO,MAAMuB,WAAW,GAAGA,CAAA,KAAM5D,WAAW,CAACyB,GAAG,CAAC,WAAW,CAAC;;AAE7D;AACA,OAAO,MAAMoC,iBAAiB,GAAGA,CAACC,SAAS,EAAEC,KAAK,EAAEC,GAAG,KACrDhE,WAAW,CAACyB,GAAG,CAAC,0BAA0BqC,SAAS,UAAUC,KAAK,QAAQC,GAAG,EAAE,CAAC;AAClF,OAAO,MAAMC,QAAQ,GAAI5B,IAAI,IAAKrC,WAAW,CAACc,IAAI,CAAC,qBAAqB,EAAEuB,IAAI,CAAC;;AAE/E;AACA,OAAO,MAAM6B,uBAAuB,GAAGA,CAACH,KAAK,EAAEC,GAAG,KAChDhE,WAAW,CAACyB,GAAG,CAAC,wCAAwCsC,KAAK,QAAQC,GAAG,EAAE,CAAC;AAC7E,OAAO,MAAMG,cAAc,GAAGA,CAACJ,KAAK,EAAEC,GAAG,KACvChE,WAAW,CAACyB,GAAG,CAAC,8BAA8BsC,KAAK,QAAQC,GAAG,EAAE,CAAC;;AAEnE;AACA,OAAO,MAAMI,GAAG,GAAG;EACjBjC,WAAW;EACXC,aAAa;EACbE,aAAa;EACbE,aAAa;EACbC,YAAY;EACZC,mBAAmB;EACnBC,mBAAmB;EACnBC,mBAAmB;EACnBC,YAAY;EACZC,oBAAoB;EACpBC,uBAAuB;EACvBC,cAAc;EACdC,SAAS;EACTI,WAAW;EACXC,WAAW;EACXC,iBAAiB;EACjBG,QAAQ;EACRC,aAAa;EACbC,WAAW;EACXC,iBAAiB;EACjBI,QAAQ;EACRC,uBAAuB;EACvBC,cAAc;EACdpD,KAAK;EACLH,QAAQ;EACRY,cAAc;EACdE,aAAa;EACbE,WAAW;EACXC,eAAe;EACfC,cAAc;EACdG;AACF,CAAC;AAED,eAAejC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}