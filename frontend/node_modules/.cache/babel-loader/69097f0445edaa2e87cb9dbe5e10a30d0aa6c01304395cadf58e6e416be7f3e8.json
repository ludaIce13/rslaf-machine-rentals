{"ast":null,"code":"import axios from 'axios';\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\n\n// Create API instance\nconst api = axios.create({\n  baseURL: API_BASE,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add JWT token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Authentication\nexport const register = userData => api.post('/auth/register', userData);\nexport const login = credentials => api.post('/auth/login/json', credentials);\nexport const getCurrentUser = () => api.get('/auth/me');\nexport const updateProfile = userData => api.put('/auth/me', userData);\n\n// Admin functions\nexport const getAllUsers = () => api.get('/auth/admin/users');\nexport const createAdminUser = userData => api.post('/auth/admin/users', userData);\nexport const updateUserRole = (userId, role) => api.put(`/auth/admin/users/${userId}/role`, {\n  role\n});\nexport const deactivateUser = userId => api.delete(`/auth/admin/users/${userId}`);\n\n// Products\nexport const getProducts = () => api.get('/products');\nexport const createProduct = data => api.post('/products', data);\nexport const updateProduct = (id, data) => api.put(`/products/${id}`, data);\nexport const deleteProduct = id => api.delete(`/products/${id}`);\n\n// Inventory\nexport const getInventory = () => api.get('/inventory');\nexport const createInventoryItem = data => api.post('/inventory', data);\nexport const updateInventoryItem = (id, data) => api.put(`/inventory/${id}`, data);\nexport const deleteInventoryItem = id => api.delete(`/inventory/${id}`);\n\n// Customers\nexport const getCustomers = () => api.get('/customers');\nexport const getMyCustomerProfile = () => api.get('/customers/me');\nexport const updateMyCustomerProfile = data => api.put('/customers/me', data);\nexport const createCustomer = data => api.post('/customers', data);\n\n// Orders\nexport const getOrders = () => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    return Promise.reject(new Error('No authentication token found. Please log in.'));\n  }\n  return api.get('/orders', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\nexport const getMyOrders = () => api.get('/orders/my');\nexport const createOrder = data => api.post('/orders', data);\nexport const updateOrderStatus = (orderId, status) => api.post(`/orders/${orderId}/status/${status}`);\nexport const getOrder = orderId => api.get(`/orders/${orderId}`);\n\n// Payments\nexport const createPayment = data => api.post('/payments', data);\nexport const getPayments = () => api.get('/payments');\n\n// Availability\nexport const getAvailableItems = (productId, start, end) => api.get(`/availability/products/${productId}?start=${start}&end=${end}`);\nexport const getQuote = data => api.post('/availability/quote', data);\n\n// Reports\nexport const getUpcomingReservations = (start, end) => api.get(`/reports/upcoming-reservations?start=${start}&end=${end}`);\nexport const getUtilization = (start, end) => api.get(`/reports/utilization?start=${start}&end=${end}`);\nexport default api;","map":{"version":3,"names":["axios","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","register","userData","post","login","credentials","getCurrentUser","get","updateProfile","put","getAllUsers","createAdminUser","updateUserRole","userId","role","deactivateUser","delete","getProducts","createProduct","data","updateProduct","id","deleteProduct","getInventory","createInventoryItem","updateInventoryItem","deleteInventoryItem","getCustomers","getMyCustomerProfile","updateMyCustomerProfile","createCustomer","getOrders","Promise","reject","Error","getMyOrders","createOrder","updateOrderStatus","orderId","status","getOrder","createPayment","getPayments","getAvailableItems","productId","start","end","getQuote","getUpcomingReservations","getUtilization"],"sources":["C:/Users/vidai/OneDrive/Desktop/smartrentals_mvp/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\n\n// Create API instance\nconst api = axios.create({\n  baseURL: API_BASE,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add JWT token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Authentication\nexport const register = (userData) => api.post('/auth/register', userData);\nexport const login = (credentials) => api.post('/auth/login/json', credentials);\nexport const getCurrentUser = () => api.get('/auth/me');\nexport const updateProfile = (userData) => api.put('/auth/me', userData);\n\n// Admin functions\nexport const getAllUsers = () => api.get('/auth/admin/users');\nexport const createAdminUser = (userData) => api.post('/auth/admin/users', userData);\nexport const updateUserRole = (userId, role) => api.put(`/auth/admin/users/${userId}/role`, { role });\nexport const deactivateUser = (userId) => api.delete(`/auth/admin/users/${userId}`);\n\n// Products\nexport const getProducts = () => api.get('/products');\nexport const createProduct = (data) => api.post('/products', data);\nexport const updateProduct = (id, data) => api.put(`/products/${id}`, data);\nexport const deleteProduct = (id) => api.delete(`/products/${id}`);\n\n// Inventory\nexport const getInventory = () => api.get('/inventory');\nexport const createInventoryItem = (data) => api.post('/inventory', data);\nexport const updateInventoryItem = (id, data) => api.put(`/inventory/${id}`, data);\nexport const deleteInventoryItem = (id) => api.delete(`/inventory/${id}`);\n\n// Customers\nexport const getCustomers = () => api.get('/customers');\nexport const getMyCustomerProfile = () => api.get('/customers/me');\nexport const updateMyCustomerProfile = (data) => api.put('/customers/me', data);\nexport const createCustomer = (data) => api.post('/customers', data);\n\n// Orders\nexport const getOrders = () => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    return Promise.reject(new Error('No authentication token found. Please log in.'));\n  }\n  return api.get('/orders', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\nexport const getMyOrders = () => api.get('/orders/my');\nexport const createOrder = (data) => api.post('/orders', data);\nexport const updateOrderStatus = (orderId, status) => api.post(`/orders/${orderId}/status/${status}`);\nexport const getOrder = (orderId) => api.get(`/orders/${orderId}`);\n\n// Payments\nexport const createPayment = (data) => api.post('/payments', data);\nexport const getPayments = () => api.get('/payments');\n\n// Availability\nexport const getAvailableItems = (productId, start, end) =>\n  api.get(`/availability/products/${productId}?start=${start}&end=${end}`);\nexport const getQuote = (data) => api.post('/availability/quote', data);\n\n// Reports\nexport const getUpcomingReservations = (start, end) =>\n  api.get(`/reports/upcoming-reservations?start=${start}&end=${end}`);\nexport const getUtilization = (start, end) =>\n  api.get(`/reports/utilization?start=${start}&end=${end}`);\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}